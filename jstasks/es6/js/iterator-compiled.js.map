{"version":3,"sources":["iterator.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;AACA,IAAI,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;;AAEA;;;AAGA,qBAAQ,GAAR,iBAAe,GAAf;;AAGA;AACA;;;AAGA,sBAAQ,GAAR,qCAAe,QAAf;;AAGA;AACA,IAAI,QAAQ;AACR,UAAM,CADE;AAER,QAAI;AAFI,CAAZ;;AAKA;AACA,MAAM,OAAO,QAAb,IAAyB,YAAW;;AAEhC,QAAI,UAAU,KAAK,IAAnB;AACA,QAAI,OAAO,KAAK,EAAhB;;AAEA;AACA,WAAO;AACH,YADG,kBACI;AACH,gBAAI,WAAW,IAAf,EAAqB;AACjB,uBAAO;AACH,0BAAM,KADH;AAEH,2BAAO;AAFJ,iBAAP;AAIH,aALD,MAKO;AACH,uBAAO;AACH,0BAAM;AADH,iBAAP;AAGH;AACJ;AAZE,KAAP;AAeH,CArBD;;AAuBA;;;AAGA,sBAAQ,GAAR,qCAAe,KAAf;;AAGA;AACA,IAAI,MAAM,OAAV;;AAEA,IAAI,WAAW,IAAI,OAAO,QAAX,GAAf;;AAEA,OAAM,IAAN,EAAY;AACR,QAAI,SAAS,SAAS,IAAT,EAAb;AACA,QAAI,OAAO,IAAX,EAAiB;AACjB,YAAQ,GAAR,CAAY,OAAO,KAAnB;AACH","file":"iterator-compiled.js","sourcesContent":["'use strict';\r\n\r\n// 1\r\nlet arr = [1, 2, 3];\r\n\r\n/*for (let value of arr) {\r\n    console.log(value);\r\n}*/\r\nconsole.log(...arr);\r\n\r\n\r\n// 2\r\n/*for (let char of \"Привет\") {\r\n    console.log(char);\r\n}*/\r\nconsole.log(...'Привет');\r\n\r\n\r\n// 3\r\nlet range = {\r\n    from: 1,\r\n    to: 5\r\n};\r\n\r\n// сделаем объект range итерируемым\r\nrange[Symbol.iterator] = function() {\r\n\r\n    let current = this.from;\r\n    let last = this.to;\r\n\r\n    // метод должен вернуть объект с методом next()\r\n    return {\r\n        next() {\r\n            if (current <= last) {\r\n                return {\r\n                    done: false,\r\n                    value: current++\r\n                };\r\n            } else {\r\n                return {\r\n                    done: true\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n\r\n/*for (let num of range) {\r\n    console.log(num);\r\n}*/\r\nconsole.log(...range);\r\n\r\n\r\n// 4\r\nlet str = \"Hello\";\r\n\r\nlet iterator = str[Symbol.iterator]();\r\n\r\nwhile(true) {\r\n    let result = iterator.next();\r\n    if (result.done) break;\r\n    console.log(result.value);\r\n}"]}