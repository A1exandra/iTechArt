{"version":3,"sources":["generators.js"],"names":[],"mappings":";;eA+GU,G;;AA/GV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA,SAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,qBADR,GACY,CADZ;AAAA;AAAA,2BAGc,MAHd;;AAAA;AAGI,qBAHJ;AAAA;AAAA,2BAKU,CALV;;AAAA;AAAA,qDAMW,CANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAS,IAAT,CAAc,GAAd,EAAmB;AACf,eAAW,YAAY;AACnB,WAAG,IAAH,CAAQ,QAAR;AACH,KAFD,EAEG,IAFH;AAGH;;AAED,IAAI,KAAK,KAAT","file":"generators-compiled.js","sourcesContent":["/*\r\n'use strict';\r\n\r\nvar co = require('co');\r\n\r\n/!*require(['co'], function (co) {\r\n\r\n});*!/\r\n\r\nclass Yahoo {\r\n\r\n    constructor (type, weather, finance) {\r\n        this.type = type;\r\n        this.weather = weather;\r\n        this.finance = finance;\r\n    }\r\n\r\n    blabla() {\r\n\r\n        if (this.weather && this.finance) {\r\n\r\n            /!*let deferred = Q.defer();*!/\r\n\r\n            co(function*() {\r\n\r\n                let promise = yield new Promise((resolve, reject) => {\r\n                    $.ajax({\r\n                        url: 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22minsk%2C%20ak%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys',\r\n                        success: json_weather => {\r\n\r\n                            $('<h2>').text(json_weather.query.results.channel.title).appendTo(`.${this.type}`);\r\n                            $('<h3>').text('Date: ').appendTo(`.${this.type}`);\r\n                            $(`.${this.type}`).append(json_weather.query.results.channel.item.condition.date);\r\n                            $('<h3>').text('Temperature: ').appendTo(`.${this.type}`);\r\n                            $(`.${this.type}`).append(json_weather.query.results.channel.item.condition.temp);\r\n                            /!*deferred.*!/resolve();\r\n                        },\r\n\r\n                        error: () => {\r\n                            /!*deferred.*!/reject(new myError('Incorrect url!'));\r\n                        }\r\n                    });\r\n                });\r\n\r\n                //return promise;\r\n\r\n            }).then(res => {\r\n\r\n                $.ajax({\r\n                    url: 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quote%20where%20symbol%20in%20(%22USD%22%2C%22BYN%22)&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=',\r\n                    success: json_finance => {\r\n\r\n                        $('<h2>').text('Yahoo! Finance - Minsk, Minsk, BY').appendTo(`.${this.type}`);\r\n                        $('<h3>').text('Exchange rates: ').appendTo(`.${this.type}`);\r\n                        $(`.${this.type}`).append(json_finance.query.results.quote[0].LastTradePriceOnly);\r\n                    },\r\n\r\n                    error: () => {\r\n                        // reject(new myError('Incorrect url!'));\r\n                        console.log('Incorrect url!');\r\n                    }\r\n                });\r\n            });\r\n\r\n        } else if (this.weather) {\r\n\r\n            $.ajax({\r\n                url: 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22minsk%2C%20ak%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys',\r\n                success: json_weather => {\r\n\r\n                    $('<h2>').text(json_weather.query.results.channel.title).appendTo(`.${this.type}`);\r\n                    $('<h3>').text('Date: ').appendTo(`.${this.type}`);\r\n                    $(`.${this.type}`).append(json_weather.query.results.channel.item.condition.date);\r\n                    $('<h3>').text('Temperature: ').appendTo(`.${this.type}`);\r\n                    $(`.${this.type}`).append(json_weather.query.results.channel.item.condition.temp);\r\n                }\r\n            });\r\n        } else if (this.finance) {\r\n\r\n            $.ajax({\r\n                url: 'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quote%20where%20symbol%20in%20(%22USD%22%2C%22BYN%22)&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&callback=',\r\n                success: json_finance => {\r\n\r\n                    $('<h2>').text('Yahoo! Finance - Minsk, Minsk, BY').appendTo(`.${this.type}`);\r\n                    $('<h3>').text('Exchange rates: ').appendTo(`.${this.type}`);\r\n                    $(`.${this.type}`).append(json_finance.query.results.quote[0].LastTradePriceOnly);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n$(document).ready(() => {\r\n\r\n    $('#weather').click(() => {\r\n        let weather = new Yahoo('weather', true);\r\n        weather.blabla();\r\n    });\r\n\r\n    $('#finance').click(() => {\r\n        let finance = new Yahoo('finance', false, true);\r\n        finance.blabla();\r\n    });\r\n\r\n    $('#total').click(() => {\r\n        let total = new Yahoo('total', true, true);\r\n        total.blabla();\r\n    });\r\n});\r\n*/\r\n\r\nfunction* gen() {\r\n    var a = 0;\r\n\r\n    a = yield time();\r\n\r\n    yield 2;\r\n    return 3;\r\n}\r\n\r\nfunction time(gen) {\r\n    setTimeout(function () {\r\n        g1.next('blabla');\r\n    }, 1000);\r\n}\r\n\r\nvar g1 = gen();\r\n\r\n\r\n"]}